#!/usr/bin/env bash

set -e

# Config options you may pass via Docker like so 'docker run -e "<option>=<value>"':
# - IMAGE_NAME=<name>, define a static name for your .img files

cd /opt/nodemcu-firmware

if [ ! -x luac.cross -a !  -x luac.cross.int ]; then
  echo Error: No cross compiler found. You need to build the firmeware first.
  exit -1
fi

export BUILD_DATE
BUILD_DATE="$(date "+%Y%m%d-%H%M")"

if [ -z "$1" ]; then
  cd /opt/lua
  LUA_FILES=$(find . -iname "*.lua")
else
  DIR=$(dirname $1)/
  NAME=$(basename $1)

  cd /opt/lua/${DIR}

  LUA_FILES=$(cat ${NAME})
  LUA_FILES=$(ls ${LUA_FILES})
fi
echo Adding files: ${LUA_FILES}

if [ -z "$IMAGE_NAME" ]; then
  IMAGE_NAME="${BUILD_DATE}"
fi

# make a float LFS image if available
if [ -x /opt/nodemcu-firmware/luac.cross ]; then
  FILENAME=${DIR}LFS_float_"${IMAGE_NAME}".img
  echo creating ${FILENAME}
  if [ -z "$1" ]; then
    find ../lua -iname "*.lua" -exec /opt/nodemcu-firmware/luac.cross -f -o ../lua/"${FILENAME}" {} +
  else
    /opt/nodemcu-firmware/luac.cross -f -o /opt/lua/${FILENAME} ${LUA_FILES}
  fi
fi

# make an int LFS image if available
if [ -x /opt/nodemcu-firmware/luac.cross.int ]; then
  FILENAME=${DIR}LFS_integer_"${IMAGE_NAME}".img
  echo creating ${FILENAME}
  if [ -z "$1" ]; then
    find ../lua -iname "*.lua" -exec /opt/nodemcu-firmware/luac.cross.int -f -o ../lua/"${FILENAME}" {} +
  else
    /opt/nodemcu-firmware/luac.cross.int -f -o /opt/lua/${FILENAME} ${LUA_FILES}
  fi
fi

